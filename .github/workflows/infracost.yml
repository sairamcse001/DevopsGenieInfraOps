name: Infracost PR Analysis

on:
  issue_comment:
    types: [created]
  pull_request:
    paths:
      - 'terraform/**'
  workflow_dispatch:

jobs:
  infracost:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event.issue.pull_request
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ics_v1_0EYAc3KF1KDTdwcVGiFemY_NTLN0pGEqFspCecg7pUoHjraFjhLRwtik5Lkfj6dOtnBHH45T

      - name: Run Infracost and generate JSON
        run: |
          infracost breakdown \
            --path=terraform \
            --format=json \
            --out-file=infracost-output.json

      - name: Print GitHub PR and Infracost Output
        run: |
          pr_number="${{ github.event.pull_request.number }}"
          repo="${{ github.repository }}"

          echo "📦 Repository: $repo"
          echo "🔢 PR Number: $pr_number"
          echo "💸 Infracost Output:"
          cat infracost-output.json

      - name: Get Infracost Bot Comment and Save HTML
        id: fetch_comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            pr_number="${{ github.event.pull_request.number }}"
          else
            pr_url="${{ github.event.issue.pull_request.url }}"
            pr_number=$(echo $pr_url | grep -o '[0-9]*$')
          fi

          echo "📥 Fetching comments for PR #$pr_number"
          comments=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments")

          echo "$comments"
          infracost_comment=$(echo "$comments" | jq -r '.[0].body')
          
          echo "$infracost_comment"
          if [ -z "$infracost_comment" ]; then
            echo "No Infracost bot comment found."
            exit 1
          fi

          echo "comment_file=comment.html" >> $GITHUB_OUTPUT

      - name: Parse Infracost Comment HTML to JSON and print FinOps table only
        run: |
          npm install cheerio

          node -e "
            const fs = require('fs');
            const cheerio = require('cheerio');
            let html = fs.readFileSync('comment.html', 'utf8');

            const markdownCommentRegex = /^\[\/\/\]: <> \(.*?\)\n?/;
            const cleanedHtml = html.replace(markdownCommentRegex, '');

            console.log('📄 Raw cleaned HTML content:');
            console.log(cleanedHtml);

            const \$ = cheerio.load(cleanedHtml, { decodeEntities: false });

            let finOpsTable = null;
            \$('table').each((_, table) => {
              const header = \$(table).find('tr').first().text().trim();
              if (header.includes('FinOps policies')) {
                finOpsTable = table;
                return false;
              }
            });

            if (!finOpsTable) {
              console.error('❌ FinOps policies table not found');
              process.exit(0);
            }

            function parseNode(node) {
              if (node.type === 'text') {
                const text = node.data.trim();
                if (text) return text;
                return null;
              }
              if (node.type === 'tag') {
                const obj = { tag: node.name, attrs: node.attribs || {} };
                const children = [];
                node.children.forEach(c => {
                  const child = parseNode(c);
                  if (child !== null && child !== '') children.push(child);
                });
                if (children.length) obj.children = children;
                return obj;
              }
              return null;
            }

            const json = parseNode(finOpsTable);

            fs.writeFileSync('finops-comment.json', JSON.stringify(json, null, 2));
            console.log('✅ Parsed FinOps policies table saved to finops-comment.json');
            console.log(JSON.stringify(json, null, 2));
          "
